{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport EventsScreen from \"./screens/EventsScreen\";\nimport ContactScreen from \"./screens/ContactScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === 'Home') {\n              iconName = 'home';\n            } else if (route.name === 'Events') {\n              iconName = 'list';\n            } else if (route.name === 'Contacts') {\n              iconName = focused ? 'user' : 'user-o';\n            }\n\n            return _jsx(FontAwesome, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Events\",\n        component: EventsScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Contacts\",\n        component: ContactScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","FontAwesome","HomeScreen","EventsScreen","ContactScreen","Tab","App","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor"],"sources":["C:/Users/cjxz2/my-app/App.js"],"sourcesContent":["import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\n\n//tabs\nimport HomeScreen from './screens/HomeScreen';\nimport EventsScreen from './screens/EventsScreen';\nimport ContactScreen from './screens/ContactScreen';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            \n            //Set the icon based on which route it is (name of the tab)\n            if (route.name === 'Home') {\n              iconName = 'home';\n            } else if (route.name === 'Events') {\n              iconName = 'list';\n            } else if (route.name === 'Contacts'){\n              iconName = focused ? 'user' : 'user-o'\n            }\n\n            // You can return any component that you like here!\n            return <FontAwesome name={iconName} size={size} color={color} />;\n          },\n         tabBarActiveTintColor: \"tomato\",\n         tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\n        <Tab.Screen name=\"Events\" component={EventsScreen} />\n        <Tab.Screen name=\"Contacts\" component={ContactScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,WAAP;AAGA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;;;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;AAEA,eAAe,SAASM,GAAT,GAAe;EAC5B,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,GAAD,CAAK,SAAL;MACE,aAAa,EAAE;QAAA,IAAGC,KAAH,QAAGA,KAAH;QAAA,OAAgB;UAC7BC,UAAU,EAAE,2BAA8B;YAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;YAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;YAAA,IAAXC,IAAW,SAAXA,IAAW;YACxC,IAAIC,QAAJ;;YAGA,IAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;cACzBD,QAAQ,GAAG,MAAX;YACD,CAFD,MAEO,IAAIL,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6B;cAClCD,QAAQ,GAAG,MAAX;YACD,CAFM,MAEA,IAAIL,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA8B;cACnCD,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,QAA9B;YACD;;YAGD,OAAO,KAAC,WAAD;cAAa,IAAI,EAAEG,QAAnB;cAA6B,IAAI,EAAED,IAAnC;cAAyC,KAAK,EAAED;YAAhD,EAAP;UACD,CAf4B;UAgB9BI,qBAAqB,EAAE,QAhBO;UAiB9BC,uBAAuB,EAAE;QAjBK,CAAhB;MAAA,CADjB;MAAA,WAqBE,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,MAAjB;QAAwB,SAAS,EAAEb;MAAnC,EArBF,EAsBE,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,QAAjB;QAA0B,SAAS,EAAEC;MAArC,EAtBF,EAuBE,KAAC,GAAD,CAAK,MAAL;QAAY,IAAI,EAAC,UAAjB;QAA4B,SAAS,EAAEC;MAAvC,EAvBF;IAAA;EADF,EADF;AA6BD"},"metadata":{},"sourceType":"module"}