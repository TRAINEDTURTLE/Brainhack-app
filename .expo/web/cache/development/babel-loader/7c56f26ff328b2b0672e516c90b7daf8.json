{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport EventsStack from \"./screens/EventsScreen\";\nimport ContactScreen from \"./screens/ContactScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"beige\"\n    },\n    children: [_jsx(StatusBar, {}), _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === 'Home') {\n                iconName = 'home';\n              } else if (route.name === 'Events') {\n                iconName = 'list';\n              } else if (route.name === 'Contacts') {\n                iconName = focused ? 'user' : 'user-o';\n              }\n\n              return _jsx(FontAwesome, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: \"tomato\",\n            tabBarInactiveTintColor: \"gray\"\n          };\n        },\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Tab.Screen, {\n          name: \"Events\",\n          component: EventsStack,\n          options: {\n            headerShown: true\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Contacts\",\n          component: ContactScreen\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","FontAwesome","HomeScreen","EventsStack","ContactScreen","Tab","App","flex","backgroundColor","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown"],"sources":["D:/1.xingxing data/Google Drive/Coding/React Native/Brainhack app/App.js"],"sourcesContent":["import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\nimport { SafeAreaView, StatusBar } from 'react-native';\n//tabs\nimport HomeScreen from './screens/HomeScreen';\nimport EventsStack from './screens/EventsScreen';\nimport ContactScreen from './screens/ContactScreen';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <SafeAreaView style={{flex:1,backgroundColor:\"beige\"}}>\n      <StatusBar/>\n      <NavigationContainer>\n        <Tab.Navigator\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n              let iconName;\n              \n              //Set the icon based on which route it is (name of the tab)\n              if (route.name === 'Home') {\n                iconName = 'home';\n              } else if (route.name === 'Events') {\n                iconName = 'list';\n              } else if (route.name === 'Contacts'){\n                iconName = focused ? 'user' : 'user-o';\n              }\n\n              // You can return any component that you like here!\n              return <FontAwesome name={iconName} size={size} color={color} />;\n            },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n          })}\n        >\n          <Tab.Screen name=\"Home\" component={HomeScreen} />\n          <Tab.Screen name=\"Events\" component={EventsStack} options={{headerShown:true}}/>\n          <Tab.Screen name=\"Contacts\" component={ContactScreen} />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </SafeAreaView>\n  );\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,WAAP;;;AAGA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;;;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;AAEA,eAAe,SAASM,GAAT,GAAe;EAC5B,OACE,MAAC,YAAD;IAAc,KAAK,EAAE;MAACC,IAAI,EAAC,CAAN;MAAQC,eAAe,EAAC;IAAxB,CAArB;IAAA,WACE,KAAC,SAAD,KADF,EAEE,KAAC,mBAAD;MAAA,UACE,MAAC,GAAD,CAAK,SAAL;QACE,aAAa,EAAE;UAAA,IAAGC,KAAH,QAAGA,KAAH;UAAA,OAAgB;YAC7BC,UAAU,EAAE,2BAA8B;cAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;cAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;cAAA,IAAXC,IAAW,SAAXA,IAAW;cACxC,IAAIC,QAAJ;;cAGA,IAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;gBACzBD,QAAQ,GAAG,MAAX;cACD,CAFD,MAEO,IAAIL,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6B;gBAClCD,QAAQ,GAAG,MAAX;cACD,CAFM,MAEA,IAAIL,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA8B;gBACnCD,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,QAA9B;cACD;;cAGD,OAAO,KAAC,WAAD;gBAAa,IAAI,EAAEG,QAAnB;gBAA6B,IAAI,EAAED,IAAnC;gBAAyC,KAAK,EAAED;cAAhD,EAAP;YACD,CAf4B;YAgB/BI,qBAAqB,EAAE,QAhBQ;YAiB/BC,uBAAuB,EAAE;UAjBM,CAAhB;QAAA,CADjB;QAAA,WAqBE,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,MAAjB;UAAwB,SAAS,EAAEf;QAAnC,EArBF,EAsBE,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,QAAjB;UAA0B,SAAS,EAAEC,WAArC;UAAkD,OAAO,EAAE;YAACe,WAAW,EAAC;UAAb;QAA3D,EAtBF,EAuBE,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,UAAjB;UAA4B,SAAS,EAAEd;QAAvC,EAvBF;MAAA;IADF,EAFF;EAAA,EADF;AAgCD"},"metadata":{},"sourceType":"module"}